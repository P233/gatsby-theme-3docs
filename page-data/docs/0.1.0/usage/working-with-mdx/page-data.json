{"componentChunkName":"component---theme-src-templates-doc-template-doc-template-js","path":"/docs/0.1.0/usage/working-with-mdx/","webpackCompilationHash":"f4a1c936485300d3c692","result":{"data":{"mdx":{"fields":{"version":"0.1.0"},"frontmatter":{"title":"Working with MDX"},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Working with MDX\",\n  \"chapterOrderString\": \"2.1\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"In 3docs, all pages and documentations are written in the MDX format, which is an extension of markdown and accommodates embedded JSX syntax. Therefore, you'll be able to use React components inside your markdown file directly. And I believe you already realized the benefits we can gain from it.\"), mdx(\"p\", null, \"Here is an example of how to add the initial documentation page link of the latest version:\"), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"mdx\"\n  }, mdx(\"pre\", _extends({\n    parentName: \"div\"\n  }, {\n    \"className\": \"language-mdx\"\n  }), mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-mdx\"\n  }), \"import { Link } from \\\"gatsby\\\";\\nimport { useVersionList } from \\\"gatsby-theme-3docs\\\";\\n\\n# Heading\\n\\n<Link to={useVersionList()[0].initPage}>Latest Version</Link>\"))), mdx(\"p\", null, \"See \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://www.gatsbyjs.org/packages/gatsby-plugin-mdx/\",\n    \"target\": \"_blank\",\n    \"rel\": \"nofollow noopener noreferrer\"\n  }), \"https://www.gatsbyjs.org/packages/gatsby-plugin-mdx/\"), \" to learn more about MDX.\"), mdx(\"h2\", {\n    \"id\": \"pre-installed-plugins\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#pre-installed-plugins\",\n    \"aria-label\": \"pre installed plugins permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"undefined\", {\n    parentName: \"a\"\n  })), \"Pre-installed Plugins\"), mdx(\"p\", null, \"There are five pre-installed remark plugins to help us work with MDX efficiently:\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://www.gatsbyjs.org/packages/gatsby-remark-prismjs/\",\n    \"target\": \"_blank\",\n    \"rel\": \"nofollow noopener noreferrer\"\n  }), \"gatsby-remark-prismjs\"), \" to add syntax highlighting support.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://www.gatsbyjs.org/packages/gatsby-remark-external-links/\",\n    \"target\": \"_blank\",\n    \"rel\": \"nofollow noopener noreferrer\"\n  }), \"gatsby-remark-external-links\"), \" to force all links open in a new browser tab.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://www.gatsbyjs.org/packages/gatsby-remark-relative-images/\",\n    \"target\": \"_blank\",\n    \"rel\": \"nofollow noopener noreferrer\"\n  }), \"gatsby-remark-relative-images\"), \", alongside with the \", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://www.gatsbyjs.org/packages/gatsby-remark-images/\",\n    \"target\": \"_blank\",\n    \"rel\": \"nofollow noopener noreferrer\"\n  }), \"gatsby-remark-images\"), \" plugin, to enable adding images in relative path, e.g. \", mdx(\"code\", _extends({\n    parentName: \"li\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"![image](../page/to/image.jpg)\"), \" \"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://www.gatsbyjs.org/packages/gatsby-remark-autolink-headers/\",\n    \"target\": \"_blank\",\n    \"rel\": \"nofollow noopener noreferrer\"\n  }), \"gatsby-remark-autolink-headers\"), \" at add anchors to the markdown headings\")));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{"items":[{"url":"#pre-installed-plugins","title":"Pre-installed Plugins"}]}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/docs/0.1.0/usage/working-with-mdx/"}}}